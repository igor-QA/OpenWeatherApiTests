plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.8.1'}

repositories {
    mavenCentral()
}
ext {
    allureVersion = "2.13.7"
    selenideVersion = "5.17.0"
    junitVersion = "5.7.0"
}

allure {
    autoconfigure = true // плагин все автоматически сконфигурирует
    aspectjweaver = true
    version = "${allureVersion}"
    useJUnit5 {
        version = "${allureVersion}"
    }

}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
    "io.qameta.allure:allure-java-commons:${allureVersion}",
    "io.qameta.allure:allure-rest-assured:${allureVersion}",
    "io.qameta.allure:allure-selenide:${allureVersion}",
    "io.rest-assured:rest-assured:4.3.2",
    "org.aspectj:aspectjweaver:1.9.5",
    "com.codeborne:selenide:${selenideVersion}",
    "org.aeonbits.owner:owner:1.0.12",
    "io.rest-assured:rest-assured:4.3.1",
    "com.fasterxml.jackson.core:jackson-databind:2.11.2",
    "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
    "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
    )
    testRuntimeOnly (
    "org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

tasks.withType(Test) {
    systemProperties = System.properties
    if (project.hasProperty("web.threads")) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': project.getProperty("web.threads").toInteger()
        ]
    }
        systemProperty 'remote.properties', 'user.properties'

    test {
        //systemProperty "chromeoptions.args","--disable-notifications" //увидомления выкл
        useJUnitPlatform()
    }
}